<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nwsuaf.edu.srms.dao.RegisterReagentMapper" >
	<resultMap id="BaseResultMap" type="cn.nwsuaf.edu.srms.entity.RegisterReagent" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="reagent_id" property="reagentId" jdbcType="INTEGER" />
		<result column="producer_id" property="producerId" jdbcType="INTEGER" />
		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="RegisterMap" type="cn.nwsuaf.edu.srms.vo.RegisterVo" >
		<id column="id" property="id" jdbcType="INTEGER" />

		<result column="plat_name" property="platName" jdbcType="VARCHAR" />

		<result column="reagent_id" property="goodsId" jdbcType="INTEGER" />
		<result column="reagent_name" property="goodsName" jdbcType="VARCHAR" />

		<result column="producer_id" property="producerId" jdbcType="INTEGER" />
		<result column="producer_name" property="producerName" jdbcType="VARCHAR" />

		<result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
		<result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />

		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />

		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />

		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List" >
		id, reagent_id, producer_id, supplier_id, price, count, total_price, remark, user_id,
		create_time, status
	</sql>

	<select id="getIds" resultType="java.lang.Integer">
		SELECT id
		FROM register_reagent
		WHERE reagent_id in
		<foreach item="item" index="index" open="(" separator="," close=")" collection="materialIdList">
			#{item}
		</foreach>
		<if test="year != null" >
			AND year(create_time) = #{year}
		</if>
		<if test="month != null" >
			AND month(create_time) = #{month}
		</if>
		order by create_time DESC
	</select>

	<select id="getViewIds" resultType="java.lang.Integer">
		SELECT id
		FROM register_reagent
		WHERE status > #{commit}
		order by create_time DESC
	</select>

	<select id="getAdminViewRegister" resultMap="RegisterMap">
		SELECT register_reagent.id as id,platform.name as plat_name,
		pro_reagent.id as reagent_id,pro_reagent.name as reagent_name,
		com_producer.id as producer_id,com_producer.name as producer_name,
		com_supplier.id as supplier_id,com_supplier.name as supplier_name,
		user.id as user_id,user.name as user_name,
		register_reagent.price,register_reagent.count,
		register_reagent.total_price,register_reagent.remark,
		register_reagent.create_time,register_reagent.status
		FROM register_reagent,user,pro_reagent,com_producer,com_supplier,platform
		WHERE register_reagent.id in
		<foreach item="item" index="index" open="(" separator="," close=")" collection="idList">
			#{item}
		</foreach>
		AND pro_reagent.plat_id = platform.id
		AND register_reagent.reagent_id = pro_reagent.id
		AND register_reagent.producer_id = com_producer.id
		AND register_reagent.supplier_id = com_supplier.id
		AND register_reagent.user_id = user.id
		order by create_time DESC
	</select>

	<select id="getRegister" resultMap="RegisterMap">
		SELECT register_reagent.id as id,
		pro_reagent.id as reagent_id,pro_reagent.name as reagent_name,
		com_producer.id as producer_id,com_producer.name as producer_name,
		com_supplier.id as supplier_id,com_supplier.name as supplier_name,
		user.id as user_id,user.name as user_name,
		register_reagent.price,register_reagent.count,
		register_reagent.total_price,register_reagent.remark,
		register_reagent.create_time,register_reagent.status
		FROM register_reagent,user,pro_reagent,com_producer,com_supplier
		WHERE register_reagent.id in
		<foreach item="item" index="index" open="(" separator="," close=")" collection="idList">
			#{item}
		</foreach>
		AND register_reagent.reagent_id = pro_reagent.id
		AND register_reagent.producer_id = com_producer.id
		AND register_reagent.supplier_id = com_supplier.id
		AND register_reagent.user_id = user.id
		order by create_time DESC
	</select>

	<select id="getViewRegister" resultMap="RegisterMap">
		SELECT register_reagent.id as id,platform.name as plat_name,
		pro_reagent.id as reagent_id,pro_reagent.name as reagent_name,
		com_producer.id as producer_id,com_producer.name as producer_name,
		com_supplier.id as supplier_id,com_supplier.name as supplier_name,
		user.id as user_id,user.name as user_name,
		register_reagent.price,register_reagent.count,
		register_reagent.total_price,register_reagent.remark,
		register_reagent.create_time,register_reagent.status
		FROM register_reagent,user,pro_reagent,com_producer,com_supplier,platform
		WHERE pro_reagent.plat_id = platform.id
		AND register_reagent.reagent_id = pro_reagent.id
		AND register_reagent.producer_id = com_producer.id
		AND register_reagent.supplier_id = com_supplier.id
		AND register_reagent.user_id = user.id
		AND status > #{commit}
		order by create_time DESC
	</select>
	<select id="getCommitRegister" resultMap="RegisterMap">
		SELECT register_reagent.id as id,platform.name as plat_name,
		pro_reagent.id as reagent_id,pro_reagent.name as reagent_name,
		com_producer.id as producer_id,com_producer.name as producer_name,
		com_supplier.id as supplier_id,com_supplier.name as supplier_name,
		user.id as user_id,user.name as user_name,
		register_reagent.price,register_reagent.count,
		register_reagent.total_price,register_reagent.remark,
		register_reagent.create_time,register_reagent.status
		FROM register_reagent,user,pro_reagent,com_producer,com_supplier,platform
		WHERE pro_reagent.plat_id = platform.id
		AND register_reagent.reagent_id = pro_reagent.id
		AND register_reagent.producer_id = com_producer.id
		AND register_reagent.supplier_id = com_supplier.id
		AND register_reagent.user_id = user.id
		AND status = #{commit}
		order by create_time DESC
	</select>

	<select id="getCountByPlatAndYearAndMonth" resultType="java.math.BigDecimal">
		SELECT sum(total_price)
		FROM register_reagent,pro_reagent
		WHERE plat_id like #{platId}
		AND pro_reagent.id = register_reagent.reagent_id
		<if test="year != null" >
			AND year(create_time) = #{year}
		</if>
		<if test="month != null" >
			AND month(create_time) = #{month}
		</if>
	</select>
	<select id="getCountByPlatAndTypeAndDate" resultType="java.util.Map">
		SELECT
		sum(case month(create_time) when '1' then total_price else 0 end) as 一月份,
		sum(case month(create_time) when '2' then total_price else 0 end) as 二月份,
		sum(case month(create_time) when '3' then total_price else 0 end) as 三月份,
		sum(case month(create_time) when '4' then total_price else 0 end) as 四月份,
		sum(case month(create_time) when '5' then total_price else 0 end) as 五月份,
		sum(case month(create_time) when '6' then total_price else 0 end) as 六月份,
		sum(case month(create_time) when '7' then total_price else 0 end) as 七月份,
		sum(case month(create_time) when '8' then total_price else 0 end) as 八月份,
		sum(case month(create_time) when '9' then total_price else 0 end) as 九月份,
		sum(case month(create_time) when '10' then total_price else 0 end) as 十月份,
		sum(case month(create_time) when '11' then total_price else 0 end) as 十一月份,
		sum(case month(create_time) when '12' then total_price else 0 end) as 十二月份,
		year(create_time) as 年份
		FROM register_reagent,pro_reagent
		WHERE plat_id like #{platId}
		AND pro_reagent.id = register_reagent.reagent_id
		<if test="year != null" >
			AND year(create_time) = #{year}
		</if>
	</select>
	<select id="getPlatCountByTypeAndDate" resultType="cn.nwsuaf.edu.srms.vo.CountVo">
		SELECT platform.name as name,sum(total_price) as totalPrice
		FROM register_reagent,pro_reagent,platform
		WHERE plat_id = #{platId}
		AND platform.id = #{platId}
		AND pro_reagent.id = register_reagent.reagent_id
		<if test="year != null" >
			AND year(create_time) = #{year}
		</if>
		<if test="month != null" >
			AND month(create_time) = #{month}
		</if>
	</select>
	<update id="updateRegister">
		update register_reagent
		set status = #{pass}
		where id = #{registerId}
	</update>

	<update id="updateAllRegister">
		update register_reagent
		set status = #{pass}
		where status = #{commit}
	</update>





	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select
		<include refid="Base_Column_List" />
		from register_reagent
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
		delete from register_reagent
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.nwsuaf.edu.srms.entity.RegisterReagent" >
		insert into register_reagent (id, reagent_id, producer_id,
		supplier_id, price, count,
		total_price, remark, user_id,
		create_time, status)
		values (#{id,jdbcType=INTEGER}, #{reagentId,jdbcType=INTEGER}, #{producerId,jdbcType=INTEGER},
		#{supplierId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{count,jdbcType=INTEGER},
		#{totalPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
		now(), #{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="cn.nwsuaf.edu.srms.entity.RegisterReagent" >
		insert into register_reagent
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if>
			<if test="reagentId != null" >
				reagent_id,
			</if>
			<if test="producerId != null" >
				producer_id,
			</if>
			<if test="supplierId != null" >
				supplier_id,
			</if>
			<if test="price != null" >
				price,
			</if>
			<if test="count != null" >
				count,
			</if>
			<if test="totalPrice != null" >
				total_price,
			</if>
			<if test="remark != null" >
				remark,
			</if>
			<if test="userId != null" >
				user_id,
			</if>
			create_time,
			<if test="status != null" >
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=INTEGER},
			</if>
			<if test="reagentId != null" >
				#{reagentId,jdbcType=INTEGER},
			</if>
			<if test="producerId != null" >
				#{producerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null" >
				#{supplierId,jdbcType=INTEGER},
			</if>
			<if test="price != null" >
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="count != null" >
				#{count,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null" >
				#{totalPrice,jdbcType=DECIMAL},
			</if>
			<if test="remark != null" >
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null" >
				#{userId,jdbcType=INTEGER},
			</if>
			now(),
			<if test="status != null" >
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.nwsuaf.edu.srms.entity.RegisterReagent" >
		update register_reagent
		<set >
			<if test="reagentId != null" >
				reagent_id = #{reagentId,jdbcType=INTEGER},
			</if>
			<if test="producerId != null" >
				producer_id = #{producerId,jdbcType=INTEGER},
			</if>
			<if test="supplierId != null" >
				supplier_id = #{supplierId,jdbcType=INTEGER},
			</if>
			<if test="price != null" >
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="count != null" >
				count = #{count,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null" >
				total_price = #{totalPrice,jdbcType=DECIMAL},
			</if>
			<if test="remark != null" >
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null" >
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			create_time = now(),
			<if test="status != null" >
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.nwsuaf.edu.srms.entity.RegisterReagent" >
		update register_reagent
		set reagent_id = #{reagentId,jdbcType=INTEGER},
		producer_id = #{producerId,jdbcType=INTEGER},
		supplier_id = #{supplierId,jdbcType=INTEGER},
		price = #{price,jdbcType=DECIMAL},
		count = #{count,jdbcType=INTEGER},
		total_price = #{totalPrice,jdbcType=DECIMAL},
		remark = #{remark,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		create_time = now(),
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>